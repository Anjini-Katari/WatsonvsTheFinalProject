Watson vs The Final Project
Anjini Katari
Ruby Friedman
Joshua Gao
pd 7
---------------------
The Famous Watson RPG!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OBSTACLES OVERCOME
 * Deciding on a topic for the final project that would 
   thoroughly demonstrate what we have learned throughout
   this semester!
 * We had an issue with static and non-static methods, and
   kept running into an issue where a non-static method 
   was invoked from a static context so we changed the methods
   in that class to static and fixed the subsequent errors and
   eventually it worked!
 * Taking user inputed data and having the computer print it
   back out at the user from different classes.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...
 * We persevered through a huge amount of static errors by going
   one by one down the list of errors until they all resolved themselves.
 * Finished most of the code in a logical and timely manner, spread it out well.
 * We made a very clear plan for implementation that we followed and it helped
   us stay on track.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Introducing pheonix to DownMountain for a logical transition
How to implement a BlackJack minigame with the gremlins
How to implement colors in the terminal window.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
How to implement try catch statements and actually understand what they do.
How to involve user input into picking a path for the RPG.
import java.util.* imports the entirety of the contents of the util package, and
for our purposes is excessive, be specific and only import what you need.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed pronouns to treasure bc we didn't ever need to address
the user by their pronouns, instead we used the second person "you".
The addition of treasure allowed us to give the user little gifts along
the way for choosing certain paths. 
We had the DownMountain and UpMountain methods converge at city to prevent
having to create a whole other half of the story, this allowed us to keep the
paths much more simple. 
We decided to implement a BlackJack minigame in DownMountain after you encounter
the gremlins to be able to continue to the City. This minigame allows us to show 
our usage of arrays and more of what we have learned over the course of the semester.


LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
||||||||||||||||||||||||||||||||||||||||||
Reach compilability first, work down starting from the first error
until code is compilable and let the error messages guide you.
System.out.print statements are very helpful for finding out where the code
has gone wrong.
Take breaks if needed, if an error has been plauging you for many hours, clear
your mind before returning to it.


 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================


2022-01-13 -- Classtime
--------------------------------------------------------------
Anjini :: Created Repo and filled out goog form
Ruby :: Helped brainstorm final project ideas
==============================================================


2022-01-14 -- Classtime
--------------------------------------------------------------
Anjini & Ruby :: Came to a conclusion about the topic of the
 FP, it will be a RPG game.
Anjini :: Came up with a pronoun feature for the RPG game
Ruby :: Found out how to make the terminal COLORFUL
==============================================================

2022-01-16             
--------------------------------------------------------------
Anjini :: Created the team flag
Ruby :: Created the proposal document and started drafting it
==============================================================

2022-01-17
--------------------------------------------------------------
Anjini :: Created a storyline/lore for the RPG.
Anjini & Ruby:: Finished the proposal and v0 of the RPG.
==============================================================

2022-01-18 -- Classtime
--------------------------------------------------------------
Anjini & Ruby :: Created v1 of the RPG which has the user
 select their first path.
==============================================================

2022-01-18
--------------------------------------------------------------
Anjini :: completed the UML diagrams for each class and its methods
Anjini & Ruby :: Created v2 of the RPG which accounts for about a
 quarter of the storyline.
Ruby :: Figured out a VERY pesky bug in the code that was from us
 forgetting to put this(); in the overloaded constructor which
 prevented the class from running the default constructor first.
Anjini & Ruby :: Finished v2, feeling much more confadient in the storyline
 and there are a lot more paths for the user to currently take.
==============================================================

2022-01-19 -- Classtime
--------------------------------------------------------------
Ruby & Anjni :: Figured out how to print out the users inputed
 information (ex: name) back at them from different classes.
Anjini :: Created a qaf post about import java.util.* and when
 we would need that. Also implemented a treasure ArrayList.
Ruby :: Created v3 with new updates and paths for the RPG
==============================================================

2022-01-19
--------------------------------------------------------------
Ruby & Anjini :: Finished v3, the RPG now has all paths marked
 out, and the code is completely runnable. There are still a
 few minor format and code fixes we plan on adding for v4.
Anjini :: Created the flowchart for the classes and methods
Ruby :: updated the README and devlog, and finished DownMountain.java
==============================================================

2022-01-20 --Classtime
--------------------------------------------------------------
Ruby & Anjini :: Created v4 and decided to start coding a BlackJack
 minigame into one of the RPG paths. Used a new class called 
 BlackJack.java to do this.
==============================================================

2022-01-20
--------------------------------------------------------------
Ruby & Anjini :: Updated devlog, README, and the flowchart.
 Also continued encoding the blackjack minigame in v4.
==============================================================
